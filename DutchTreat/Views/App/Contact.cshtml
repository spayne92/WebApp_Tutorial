@model ContactViewModel
@{
    <!-- Set in one place for both GET & POST views. -->
    ViewBag.Title = "Contact Us";
}

<!-- Picked up by layout page to render scripts at bottom of page differently for views that specify. -->
@section Scripts {
    <!-- jQuery modules cause validation to happen as input is given, instead of after submitting. -->
    <script src="~/node_modules/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/node_modules/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
}

<!-- Tells form to use post back to server when submitted. -->
<!-- Searches for a POST controller method matching the view's name. -->
<form method="post">
    <!-- Tag helper uses div to display generic model issues above form. -->
    <div asp-validation-summary="ModelOnly"></div>
    <!-- Sets focus to 'asp-for' specified input when clicked/focused. -->
    <label asp-for="Name">Your Name:</label>
    <br />
    <!-- Setting 'asp-for' property of input maps up with model properties. -->
    <input asp-for="Name" />
    <!-- Displays property validation errors more specifically and closer. -->
    <span asp-validation-for="Name"></span>
    <br />
    <label asp-for="Email">Email:</label>
    <br />
    <!-- Setting 'type' property validates input as 'valid' email format. -->
    <input type="email" asp-for="Email" />
    <span asp-validation-for="Email"></span>
    <br />
    <label asp-for="Subject">Subject:</label>
    <br />
    <input type="text" asp-for="Subject" />
    <span asp-validation-for="Subject"></span>
    <br />
    <label asp-for="Message">Message:</label>
    <br />
    <textarea rows="4" asp-for="Message"></textarea>
    <span asp-validation-for="Message"></span>
    <br />
    <!-- Form looks for 'submit' input to trigger specified 'method'. -->
    <input type="submit" value="Send Message" />
</form>